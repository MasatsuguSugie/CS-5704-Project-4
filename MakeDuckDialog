package ducksim;

import java.awt.GridLayout;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 * <p>
 * This is the make duck dialog GUI.
 * </p>
 * 
 * @author sugie
 * @version May 7, 2019
 */
public class MakeDuckDialog
    extends JDialog
{
    /**
     * 
     */
    DuckSimModel               model        = new DuckSimModel();

    // Fields

    // Duck panel
    private final JPanel       duckPanel    = new JPanel();
    private final JLabel       duckLabel    = new JLabel("Duck");
    private final String[]     duckStrings  = { "Mallard", "Redhead", "Rubber", "Decoy", "Goose" };
    private final JComboBox<?> duckOptions  = new JComboBox<Object>(duckStrings);

    // Star panel
    private final JLabel       starLabel    = new JLabel("Star");
    private final JLabel       starCounter  = new JLabel("0");
    private final JButton      starPlus     = new JButton("+");
    private final JButton      starMinus    = new JButton("-");

    // Moon panel
    private final JLabel       moonLabel    = new JLabel("Moon");
    private final JLabel       moonCounter  = new JLabel("0");
    private final JButton      moonPlus     = new JButton("+");
    private final JButton      moonMinus    = new JButton("-");

    // Cross panel
    private final JLabel       crossLabel   = new JLabel("Cross");
    private final JLabel       crossCounter = new JLabel("0");
    private final JButton      crossPlus    = new JButton("+");
    private final JButton      crossMinus   = new JButton("-");

    // Button panel
    private final JPanel       buttonPanel  = new JPanel();
    private final JButton      okayButton   = new JButton("Okay");
    private final JButton      cancelButton = new JButton("Cancel");

    // Stored Data
    private String             duckType     = "Mallard";
    private int                crossCount   = 0;
    private int                starCount    = 0;
    private int                moonCount    = 0;


    /**
     * <p>
     * Create a new MakeDuckDialog object.
     * </p>
     * 
     * @param model
     * @param view
     */
    // Constructor
    public MakeDuckDialog(DuckSimModel model, DuckSimView view)
    {

        this.getContentPane().setLayout(new BoxLayout(this.getContentPane(), BoxLayout.Y_AXIS));

        // add duck panel
        duckPanel.add(duckLabel);
        duckOptions.addActionListener(e -> {
            JComboBox<?> cb = (JComboBox<?>)e.getSource();
            duckType = (String)cb.getSelectedItem();
        });
        duckPanel.add(duckOptions);
        this.add(duckPanel);

        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(3, 4, 4, 4));

        // add star label
        panel.add(starLabel);

        // add starCounter
        panel.add(starCounter);

        // add star plus button
        starPlus.addActionListener(e -> {
            if (crossCount + moonCount + starCount < 3)
                starCount++;
            starCounter.setText("" + starCount);
        });
        panel.add(starPlus);

        // add star minus button
        starMinus.addActionListener(e -> {
            if (starCount > 0)
                starCount--;
            starCounter.setText("" + starCount);
        });
        panel.add(starMinus);

        // add moon label
        panel.add(moonLabel);

        // add moon counter
        panel.add(moonCounter);

        // add moon plus button
        moonPlus.addActionListener(e -> {
            if (crossCount + moonCount + starCount < 3)
                moonCount++;
            moonCounter.setText("" + moonCount);
        });
        panel.add(moonPlus);

        // add moon minus button
        moonMinus.addActionListener(e -> {
            if (moonCount > 0)
                moonCount--;
            moonCounter.setText("" + moonCount);
        });
        panel.add(moonMinus);

        // add cross label
        panel.add(crossLabel);

        // add cross counter
        panel.add(crossCounter);

        // add cross plus button
        crossPlus.addActionListener(e -> {
            if (crossCount + moonCount + starCount < 3)
                crossCount++;
            crossCounter.setText("" + crossCount);
        });
        panel.add(crossPlus);

        // add cross minus button
        crossMinus.addActionListener(e -> {
            if (crossCount > 0)
                crossCount--;
            crossCounter.setText("" + crossCount);
        });
        panel.add(crossMinus);

        // add bling panel
        this.add(panel);

        // add button panel
        cancelButton.addActionListener(e -> {
            this.dispose();
        });
        buttonPanel.add(cancelButton);
        okayButton.addActionListener(e -> {
            // makeDuckDialog
            Duck duck =
                DuckFactory.getInstance().createDuck(duckType, starCount, moonCount, crossCount);
            if (duck != null && (model.currDuckCount() < model.maxDuckCount()))
            {
                model.addNewDuck(duck);
            }
            view.repaint();
            this.dispose();
        });
        buttonPanel.add(okayButton);
        this.add(buttonPanel);
    }


    // Public Methods
    /**
     * <p>
     * This method returns the Duck type.
     * </p>
     * 
     * @return a duckType
     */
    public String getDuckType()
    {
        return duckType;
    }
}
